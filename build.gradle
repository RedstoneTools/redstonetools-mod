//file:noinspection GroovyAssignabilityCheck

plugins {
	id 'fabric-loom' version '1.11-SNAPSHOT'
	id 'maven-publish'
	id 'com.github.johnrengelman.shadow' version '8.+'
}

sourceCompatibility = JavaVersion.VERSION_21
targetCompatibility = JavaVersion.VERSION_21

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	maven {
        name = "WorldEdit Maven"
        url = "https://maven.enginehub.org/repo/"
    }
	maven {
		name = "JitPack"
		url = "https://jitpack.io"
	}
}

dependencies {
	// Doctor (dependency-injection)
	include implementation("rip.hippo:Doctor:1.0.1")
	include implementation("javax.inject:javax.inject:1")

	// Json
	include implementation("javax.json:javax.json-api:1.1.4")
	include implementation("org.glassfish:javax.json:1.1.4")

	// AutoService
	annotationProcessor implementation("com.google.auto.service:auto-service:1.1.1")

	// To change the versions see the gradle.properties file
	minecraft("com.mojang:minecraft:${project.minecraft_version}")
	mappings("net.fabricmc:yarn:${project.yarn_mappings}:v2")
	modImplementation("net.fabricmc:fabric-loader:${project.loader_version}")

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}")

	// Worldedit API
	modImplementation("com.sk89q.worldedit:worldedit-fabric-mc1.21.7:7.4.0-SNAPSHOT")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

java {
	withSourcesJar()
	withJavadocJar()

	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

shadowJar {
	archiveClassifier.set("unmapped")

	configurations = [project.configurations.shadow]

	from("LICENSE")
}

remapJar {
	inputFile = shadowJar.archiveFile
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release.set(21)
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
